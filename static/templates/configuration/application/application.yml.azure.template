spring:
    application:
        name: ontopop
    cloud:
        stream:
            binders:
                rabbitmq:
                    type: rabbit
                    default-candidate: true
                    environment:
                        spring:
                            rabbitmq:
                                host: 
                                port: 
                                username: 
                                password: 
                                virtual-host: /
                                ssl:
                                    enabled: true
                azure_service_bus:
                    type: servicebus-topic
                    default-candidate: false
                    environment:
                        spring:
                            cloud:
                                azure:
                                    servicebus:
                                        connection-string: ${azure-service-bus-connection-string}
            bindings:
                ingestedPublicationChannel:
                    destination: ontopop.data.ingested
                    binder: azure_service_bus
                ingestedConsumptionChannel:
                    destination: ontopop.data.ingested
                    group: ontopop.data.ingested.consumers
                    binder: azure_service_bus
                validatedPublicationChannel:
                    destination: ontopop.data.validated
                    binder: azure_service_bus
                validatedTriplestoreLoaderConsumptionChannel:
                    destination: ontopop.data.validated
                    group: ontopop.data.validated.consumers.loaders.rdf
                    binder: azure_service_bus
                validatedParserConsumptionChannel:
                    destination: ontopop.data.validated
                    group: ontopop.data.validated.consumers.parsers
                    binder: azure_service_bus
                triplestoreLoadedPublicationChannel:
                    destination: ontopop.data.loaded.triplestore
                    binder: azure_service_bus
                triplestoreLoadedConsumptionChannel:
                    destination: ontopop.data.loaded.triplestore
                    group: ontopop.data.loaded.triplestore.consumers
                    binder: azure_service_bus
                parsedPublicationChannel:
                    destination: ontopop.data.parsed
                    binder: azure_service_bus
                parsedConsumptionChannel:
                    destination: ontopop.data.parsed
                    group: ontopop.data.parsed.consumers
                    binder: azure_service_bus
                modelledPublicationChannel:
                    destination: ontopop.data.modelled
                    binder: azure_service_bus
                modelledGraphLoaderConsumptionChannel:
                    destination: ontopop.data.modelled
                    group: ontopop.data.modelled.consumers.loaders.graph
                    binder: azure_service_bus
                modelledGraphIndexerConsumptionChannel:
                    destination: ontopop.data.modelled
                    group: ontopop.data.modelled.consumers.indexers.graph
                    binder: azure_service_bus
                graphLoadedPublicationChannel:
                    destination: ontopop.data.loaded.graph
                    binder: azure_service_bus
                graphLoadedConsumptionChannel:
                    destination: ontopop.data.loaded.graph
                    group: ontopop.data.loaded.graph.consumers
                    binder: azure_service_bus
                graphIndexedPublicationChannel:
                    destination: ontopop.data.indexed.graph
                    binder: azure_service_bus
                graphIndexedConsumptionChannel:
                    destination: ontopop.data.indexed.graph
                    group: ontopop.data.indexed.graph.consumers
                    binder: azure_service_bus
            servicebus:
                topic:
                    bindings:
                        ingestedConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        validatedTriplestoreLoaderConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        validatedParserConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        triplestoreLoadedConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        parsedConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        modelledGraphLoaderConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        modelledGraphIndexerConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        graphLoadedConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
                        graphIndexedConsumptionChannel:
                            consumer:
                                checkpoint-mode: MANUAL
            function:
                definition: consume;supply;
            poller:
                fixed-delay: 1000
                initial-delay: 0
            default:
                contentType: application/json
        vault:
            enabled: false
            host:
            port:
            scheme:
            authentication:
            token:
            kv:
                enabled:
                backend:
                default-context:
    datasource:
        driver-class-name: ${spring-datasource-driver-class-name}
        url: ${spring-datasource-url}
        username: ${spring-datasource-username}
        password: ${spring-datasource-password}
    jackson:
        serialization:
            write_dates_as_timestamps: false
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: false
security:
    secrets:
        service: azure-key-vault
        aws-secrets-manager: 
            access-key-id: 
            access-key-secret: 
            region: 
        azure-key-vault:
            url: ${azure-key-vault-url}
            clientId: ${azure-key-vault-client-id}
            clientSecret: ${azure-key-vault-client-secret}
            tenantId: ${azure-key-vault-tenant-id}
        hashicorp-vault:
            paths:
                subpaths:
                    ontologies: /ontologies/
storage:
    object:
        service: azure-storage
        local:
            baseUri: 
        aws-s3:
            access-key-id: 
            access-key-secret: 
            region: 
            bucket-name: 
        azure-storage:
            account-name: ${azure-storage-account-name}
            account-key: ${azure-storage-account-key}
            blob-endpoint: ${azure-storage-blob-endpoint}
            container-name: ontopop
        containers:
            ingested: ingested
            validated: validated
            parsed: parsed
            modelled: modelled
            loaded:
                triplestore: loaded/triplestore
                graph: loaded/graph
            indexed: indexed
    triplestore:
        service: apache-jena
        apache-jena:
            fuseki:
                url: ${jena-fuseki-url}
                username: ${jena-fuseki-username}
                password: ${jena-fuseki-password}
        ontotext-graphdb:
            url: 
    graph:
        service: azure-cosmosdb
        engine:
            supportsUserDefinedIds:
            supportsNonStringIds:
            supportsSchema:
            supportsTransactions:
            supportsGeoshape:
            supportsTraversals:
                by:
        gremlin-graph:
            configuration-filename:
        gremlin-server:
            url: 
            host: ${gremlin-server-host}
            port: ${gremlin-server-port}
            username: ${gremlin-server-username}
            password: ${gremlin-server-password}
            enableSsl:
            remoteTraversalSourceName:
            serializer:
                className: 
                ioRegistries: 
                serializeResultToString: 
            bulkExecutor:
                rateLimiter:
                    enabled: true
                    actionsPerSecond: 35
                    maximumAttempts: 10
    search:
        service: azure-search
        indexNamePrefix: ontopop
        elasticsearch:
            url: 
            shards: 1
            replicas: 0
        azure-search:
            endpoint: ${azure-search-endpoint}
            key: ${azure-search-key}
web:
    client:
        codecs:
            maxInMemorySize: 10
    azure:
        webapps:
            port: 80
springdoc:
    api-docs:
        path: /api/docs
