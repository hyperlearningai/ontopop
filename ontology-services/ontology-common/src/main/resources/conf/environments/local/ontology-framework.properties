# ------------------------------------------------------------------------------
# Ontology Framework - Global Properties
# ------------------------------------------------------------------------------

# Ontology framework version number

ontology.framework.version=@project.version@

# Ontology framework active deployment environment

spring.profiles.active=@spring.profiles.active@

# ------------------------------------------------------------------------------
# Graph Database
# ------------------------------------------------------------------------------

# Apache Tinkerpop-compliant graph database implementation engine
# Valid options: [cosmosdb or tinkergraph]
# Azure CosmosDB reference: https://docs.microsoft.com/en-us/azure/cosmos-db/create-graph-gremlin-console
# TinkerGraph reference: https://tinkerpop.apache.org/docs/current/reference/#tinkergraph-gremlin

graph.db.engine=tinkergraph

# Graph database engine configuration filename
# The graph database engine configuration file should be placed inside the conf directory
# Azure CosmosDB: graphdb-cosmosdb.yaml
# TinkerGraph: graphdb-tinkergraph.properties

graph.db.configuration.filename=graphdb-tinkergraph.properties

# ------------------------------------------------------------------------------
# Graph Database Applications - Loader
# ------------------------------------------------------------------------------

# Whether to initially load the graph database in batch or event-driven mode
# Valid options: [batch, event]

graph.db.apps.loader.mode=batch

# The name of the static ontology OWL file to load in batch mode if applicable
# The static ontology OWL file should be placed inside the data directory

graph.db.apps.loader.ontology.owl.filename=he-ontology-latest.owl

# Whether to model and load a data catalogue into the graph database

graph.db.apps.loader.load.data.catalogue=true

# The name of the static data catalogue file to load in batch mode if applicable
# The static data catalogue file should be placed inside the data directory

graph.db.apps.loader.data.catalogue.filename=he-data-catalogue-latest.xlsx

# The name of the class with which to parse the given data catalogue

graph.db.apps.loader.data.catalogue.parser.class=ai.hyperlearning.ontology.services.etl.parsers.implementations.HighwaysEnglandDataCatalogueParser

# Whether to model and load a system catalogue into the graph database

graph.db.apps.loader.load.system.catalogue=false

# The name of the static system catalogue file to load in batch mode if applicable
# The static system catalogue file should be placed inside the data directory

graph.db.apps.loader.system.catalogue.filename=he-system-catalogue-latest.xlsx

# The name of the class with which to parse the given system catalogue

graph.db.apps.loader.system.catalogue.parser.class=ai.hyperlearning.ontology.services.etl.parsers.implementations.HighwaysEnglandSystemCatalogueParser

# ------------------------------------------------------------------------------
# Search Index
# ------------------------------------------------------------------------------

# Search engine
# Valid options: [azuresearch]
# Azure Cognitive Search reference: https://docs.microsoft.com/en-us/azure/search/search-what-is-azure-search

search.engine=azuresearch

# ------------------------------------------------------------------------------
# REST API
# ------------------------------------------------------------------------------

# REST API HTTP port numbers

ontology.api.all.http.port=8080
ontology.api.auth.http.port=8081
ontology.api.collaboration.http.port=8082
ontology.api.graph.http.port=8083
ontology.api.ontology.http.port=8084
ontology.api.ui.http.port=8085

# ------------------------------------------------------------------------------
# Security - Identity Access Management
# ------------------------------------------------------------------------------

# Authentication provider.
# Valid options: [file, openldap, azure-active-directory]
# File reference: see users.properties classpath resource
# UnBoundID LDAP reference: https://docs.ldap.com/ldap-sdk/docs/in-memory-directory-server.html
# Azure Active Directory reference: https://docs.microsoft.com/en-us/azure/active-directory/

ontology.auth.provider=file

# ------------------------------------------------------------------------------
# Security - Embedded LDAP Server Authentication
# ------------------------------------------------------------------------------

# Embedded LDAP server properties (used if ontology.auth.provider=openldap)

spring.ldap.embedded.ldif=classpath:ontology-users.ldif
spring.ldap.embedded.url=ldap://localhost:8399
spring.ldap.embedded.base-dn=dc=hyperlearning,dc=ai
spring.ldap.embedded.user-dn=ou=people
spring.ldap.embedded.port=8399

# ------------------------------------------------------------------------------
# Serving Storage - Data Sources
# ------------------------------------------------------------------------------

# Ontology collaboration (e.g. note management) ORM persistence

spring.datasource-ontology-collaboration.driverClassName=org.hsqldb.jdbc.JDBCDriver
spring.datasource-ontology-collaboration.jdbcUrl=jdbc:hsqldb:mem:collabdb;DB_CLOSE_DELAY=-1
spring.datasource-ontology-collaboration.username=sa
spring.datasource-ontology-collaboration.password=

# Ontology user interface (e.g. style management) ORM persistence

spring.datasource-ontology-ui.driverClassName=org.hsqldb.jdbc.JDBCDriver
spring.datasource-ontology-ui.jdbcUrl=jdbc:hsqldb:mem:uidb;DB_CLOSE_DELAY=-1
spring.datasource-ontology-ui.username=sa
spring.datasource-ontology-ui.password=

# Ontology vocabulary (e.g. synonyms) ORM persistence

spring.datasource-ontology-vocabulary.driverClassName=org.hsqldb.jdbc.JDBCDriver
spring.datasource-ontology-vocabulary.jdbcUrl=jdbc:hsqldb:mem:vocabdb;DB_CLOSE_DELAY=-1
spring.datasource-ontology-vocabulary.username=sa
spring.datasource-ontology-vocabulary.password=

# ------------------------------------------------------------------------------
# I/O and Serialization
# ------------------------------------------------------------------------------

# Serialize LocalDateTime objects

spring.jackson.serialization.write_dates_as_timestamps=false
